name: Backend CI - Improved Version

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [main]

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest
    # ... (keep your existing test setup)

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends
    if: github.event_name == 'push'  # Only build on push, not PR

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Determine Docker tags
      id: tags
      run: |
        # Create meaningful tags based on branch and commit
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "VERSION_TAG=prod-${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "SHORT_TAG=prod-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
          echo "VERSION_TAG=staging-${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "SHORT_TAG=staging-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
        else
          echo "VERSION_TAG=test-${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "SHORT_TAG=test-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
        fi

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

    - name: Build and Push with Multiple Tags
      run: |
        echo "Building with tags:"
        echo "- ${{ steps.tags.outputs.VERSION_TAG }}"
        echo "- ${{ steps.tags.outputs.SHORT_TAG }}"
        echo "- latest"
        
        # Build product service
        docker build \
          -t $ACR_LOGIN_SERVER/product_service:${{ steps.tags.outputs.VERSION_TAG }} \
          -t $ACR_LOGIN_SERVER/product_service:${{ steps.tags.outputs.SHORT_TAG }} \
          -t $ACR_LOGIN_SERVER/product_service:latest \
          ./backend/product_service/
        
        # Push all tags
        docker push $ACR_LOGIN_SERVER/product_service:${{ steps.tags.outputs.VERSION_TAG }}
        docker push $ACR_LOGIN_SERVER/product_service:${{ steps.tags.outputs.SHORT_TAG }}
        docker push $ACR_LOGIN_SERVER/product_service:latest

        # Save the image tag as workflow artifact for deployment
        echo "IMAGE_TAG=${{ steps.tags.outputs.VERSION_TAG }}" >> $GITHUB_ENV