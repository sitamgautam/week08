name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Frontend CI - Build & Push Image"]
    types: [completed]

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io

      - name: Get Backend Service IPs
        run: |
          echo "Getting backend service IPs..."
          PRODUCT_IP=$(kubectl get service product-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          ORDER_IP=$(kubectl get service order-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          
          echo "Product Service IP: $PRODUCT_IP"
          echo "Order Service IP: $ORDER_IP"
          
          echo "PRODUCT_API_URL=http://$PRODUCT_IP:8000" >> $GITHUB_ENV
          echo "ORDER_API_URL=http://$ORDER_IP:8001" >> $GITHUB_ENV

      - name: Inject Backend IPs into Frontend main.js
        run: |
          echo "Injecting IPs into frontend/static/js/main.js"
          sed -i "s|_PRODUCT_API_URL_|${{ env.PRODUCT_API_URL }}|g" frontend/static/js/main.js
          sed -i "s|_ORDER_API_URL_|${{ env.ORDER_API_URL }}|g" frontend/static/js/main.js
          
          echo "--- Modified main.js content ---"
          cat frontend/static/js/main.js
          echo "---------------------------------"

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/frontend:latest ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/frontend:latest

      - name: Set Kubernetes context
        run: |
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.CLUSTER_NAME }} --overwrite-existing

      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend to AKS..."
          kubectl apply -f k8s/frontend.yaml

      - name: Wait for Frontend LoadBalancer IP
        run: |
          echo "Waiting for Frontend LoadBalancer IP..."
          for i in $(seq 1 30); do
            FRONTEND_IP=$(kubectl get service frontend -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [[ -n "$FRONTEND_IP" ]]; then
              echo "Frontend IP: $FRONTEND_IP"
              echo "FRONTEND_IP=$FRONTEND_IP" >> $GITHUB_ENV
              break
            fi
            sleep 5
          done

      - name: Logout from Azure
        run: az logout
        if: always()
